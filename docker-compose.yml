version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_DB: ${POSTGRES_DB:-wishlist}
    ports:
      - "5432:5432"
    volumes:
      - postgres_wishlist:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Stack Server
  redis:
    image: redis/redis-stack-server:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_wishlist:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: fastapi-dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env.docker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Vue Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: vue-frontend-dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env.docker
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_wishlist:
  redis_wishlist:


# version: '3.8'

# services:
#   # FastAPI Backend
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile.dev
#     container_name: fastapi-dev
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./backend:/app
#     env_file:
#       - ./backend/.env.docker
#     networks:
#       - wishlist-network
#       - default
#     command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

#   # Vue Frontend
#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile.dev
#     container_name: vue-frontend-dev
#     ports:
#       - "5173:5173"
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules
#     env_file:
#       - ./frontend/.env.docker
#     networks:
#       - wishlist-network
#     depends_on:
#       - backend
#     command: npm run dev -- --host 0.0.0.0

# networks:
#   wishlist-network:
#     name: wishlist-network
#     driver: bridge
#   default:
#     name: bridge
#     external: true

